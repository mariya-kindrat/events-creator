#!/usr/bin/env node

/**
 * Interactive setup script for local test environment
 * NOTE: Removed hard-coded secrets. Prompts user for all sensitive values.
 */

const fs = require("fs");
const path = require("path");
const readline = require("readline");

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
});

function askQuestion(question) {
    return new Promise((resolve) => {
        rl.question(question, (answer) => {
            resolve(answer);
        });
    });
}

async function setupLocalTest() {
    console.log("🚀 Setting up local test environment...\n");

    // Check if .env.local already exists
    const envLocalPath = path.join(__dirname, ".env.local");
    if (fs.existsSync(envLocalPath)) {
        const overwrite = await askQuestion(
            "⚠️  .env.local already exists. Overwrite? (y/N): "
        );
        if (overwrite.toLowerCase() !== "y") {
            console.log("❌ Setup cancelled.");
            rl.close();
            return;
        }
    }

    console.log("📋 Please provide the following information:\n");

    // Get test database URL
    const testDbUrl = await askQuestion(
        "🗄️  Enter your test database URL from Neon: "
    );
    if (!testDbUrl.trim()) {
        console.log("❌ Test database URL is required!");
        rl.close();
        return;
    }

    // Get test URL (optional for local)
    const testUrl = await askQuestion(
        "🌐 Enter your test environment URL (or press Enter for localhost): "
    );
    const nextAuthUrl = testUrl.trim() || "http://localhost:3000";

    // Get NextAuth secret
    const nextAuthSecret = await askQuestion(
        "🔐 Enter NextAuth secret for test (or press Enter for default): "
    );
    const authSecret =
        nextAuthSecret.trim() || "test-secret-change-this-in-production";

    // OAuth credentials
    const googleClientId = await askQuestion(
        "🟢 Enter Google OAuth Client ID (or leave blank to skip): "
    );
    const googleClientSecret = await askQuestion(
        "🟢 Enter Google OAuth Client Secret (or leave blank to skip): "
    );

    // Stripe keys
    const stripePk = await askQuestion(
        "💳 Enter Stripe publishable key (pk_test_...): "
    );
    const stripeSk = await askQuestion(
        "💳 Enter Stripe secret key (sk_test_...): "
    );

    // Create .env.local content
    const envContent = `# Local Test Environment Configuration
# Generated by setup-local-test.js

# Test Database
DATABASE_URL="${testDbUrl}"

# NextAuth Configuration
NEXTAUTH_URL="${nextAuthUrl}"
NEXTAUTH_SECRET="${authSecret}"
NODE_ENV="development"

# OAuth Credentials
GOOGLE_ID=${googleClientId}
GOOGLE_SECRET=${googleClientSecret}

# Stripe Test Keys
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${stripePk}
STRIPE_SECRET_KEY=${stripeSk}
`;

    // Write .env.local file
    try {
        fs.writeFileSync(envLocalPath, envContent);
        console.log("\n✅ .env.local file created successfully!");

        // Ask if user wants to set up the test database now
        const setupDb = await askQuestion(
            "\n🗄️  Set up test database now? (Y/n): "
        );
        if (setupDb.toLowerCase() !== "n") {
            console.log("\n🔄 Setting up test database...");

            // Set environment variable for the setup script
            process.env.DATABASE_TEST_URL = testDbUrl;

            // Run the database setup
            const { execSync } = require("child_process");
            try {
                execSync("npm run setup-test-db", { stdio: "inherit" });
                console.log("\n🎉 Test environment setup completed!");
                console.log("\n📝 Next steps:");
                console.log("   1. Run: npm run dev");
                console.log("   2. Visit: http://localhost:3000");
                console.log(
                    "   3. Test your application with the test database"
                );
            } catch (error) {
                console.log(
                    "\n⚠️  Database setup failed. You can run it manually later with:"
                );
                console.log("   npm run setup-test-db");
            }
        } else {
            console.log("\n📝 Manual setup required:");
            console.log("   1. Run: npm run setup-test-db");
            console.log("   2. Run: npm run dev");
        }
    } catch (error) {
        console.error("❌ Error creating .env.local:", error.message);
    }

    rl.close();
}

setupLocalTest().catch(console.error);
