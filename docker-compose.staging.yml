services:
    db:
        image: andriyko1983/events-postgres:latest-staging
        restart: unless-stopped
        shm_size: 256mb
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_NAME}
        volumes:
            - postgres_staging_data:/var/lib/postgresql/data
        networks:
            - events-staging-network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

    app:
        image: andriyko1983/events-api:latest
        restart: unless-stopped
        environment:
            DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
            NEXTAUTH_URL: ${NEXTAUTH_URL}
            NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
            GOOGLE_ID: ${GOOGLE_ID}
            GOOGLE_SECRET: ${GOOGLE_SECRET}
            NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}
            STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
            NODE_ENV: staging
        ports:
            - "3000:3000"
        depends_on:
            db:
                condition: service_healthy
        networks:
            - events-staging-network
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "curl -f http://localhost:3000/api/health || exit 1",
                ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 60s

    # Optional: Add pgAdmin for database management in staging
    pgadmin:
        image: dpage/pgadmin4:latest
        restart: unless-stopped
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@staging.com}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-staging_admin}
        ports:
            - "8080:80"
        depends_on:
            - db
        networks:
            - events-staging-network
        volumes:
            - pgadmin_staging_data:/var/lib/pgadmin

volumes:
    postgres_staging_data:
    pgadmin_staging_data:

networks:
    events-staging-network:
        driver: bridge
